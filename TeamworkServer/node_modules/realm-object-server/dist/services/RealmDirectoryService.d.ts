import { Logger } from '../shared/Logger';
import { Server } from "../Server";
import { RealmFile } from '../realms';
export interface RealmDirectoryServiceConfig {
    tags?: string[];
}
export declare class RealmDirectoryService {
    protected logger: Logger;
    protected privateKey: string;
    protected publicKey: string;
    protected adminToken: string;
    tags: string[];
    config: RealmDirectoryServiceConfig;
    private discovery;
    private adminRealm;
    private tokenRevocationRealm;
    constructor(config?: RealmDirectoryServiceConfig);
    setLogger(l: Logger): void;
    find(): Promise<RealmFile[]>;
    findByPath(realmPath: string, accessToken: string): Promise<{
        path: string;
        syncLabel: string;
    }>;
    remove(realmPath: string, req: any): Promise<{}>;
    private getSyncServerDeleteRealmUrl(realmPath, syncLabel);
    private validatedRealmFile(path);
    start(server: Server): Promise<void>;
    stop(): Promise<void>;
    private createRealmFile(path, creatorId?, syncLabel?);
}
